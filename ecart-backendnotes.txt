                                           Backend for E-CART

*************************************Node Server Creation***********************************
    
  1. Create ecart-backend folder - ecart-backend

  2. Create package.json file-npm init in new terminal / npm init -y
  ******* Package.json file to install all 3rd party libraries
-----------------------------------------------------------------------------------------------------------------------
  3.Install express and some other
    -npm i express mongoose dotenv
    *****express - nodejs framework and Create application in backend
    *****Cors - Used to connect two different ports(frontend - 4200 and backend-5000)
    Install cors npm i cors 

    *****Mongoose - This library used to connect node and mongodb
    *****dotenv -environment variable, that are used to store app secres and configuration
--------------------------------------------------------------------------------------------------------------------------
  4.Create .gitignore file and .env file
  5.Create index.js (main entry point) 


  ******************************MONGODB ATLAS CREATION***************************************


  6.   run backend - nodemon index.js  ---we get listening on port 5000 in terminal
  7. Take thunder  new request http://localhost:5000 ----It shows Ecommerce started


 ------------------------------------------------------------------------------------------------------------------------ 
  8. Add Connection string to .env file
        In env file  

        Type DATABASE= then paste link taken from  Mongodb > Database > Drivers > 3. Connection string copy paste
           change password and give database name{e-cart} in between net/ and ?
       --- DATABASE=mongodb+srv://VishnuLakshmi:Mearnstack@cluster0.83ehrek.mongodb.net/e-cart?retryWrites=true&w=majority
------------------------------------------------------------------------------------------------------------------------------------

  9.Create a connection.js file for connect node and mongodb

  10.Use Mongoose to connect mongodb with node application

  11 Import connection.js in index.js

  12.Create Model/Collection to store products - model/productSchema.js and export It

  13. // To define routes for client requests - routes/router.js

  14. To create controller folder inorder to  define the logic to resolve the API requests

  

